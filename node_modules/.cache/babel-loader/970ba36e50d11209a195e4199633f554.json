{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import _classCallCheck from\"/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from'react';import'./TipCalculator.css';var TipCalculator=/*#__PURE__*/function(_Component){_inherits(TipCalculator,_Component);var _super=_createSuper(TipCalculator);function TipCalculator(props){var _this;_classCallCheck(this,TipCalculator);_this=_super.call(this,props);_this.state={bill:0,tip:0,people:1};return _this;}_createClass(TipCalculator,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"form\",{className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"display\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Bill: $\",this.state.bill]}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Tip: \",this.state.tip,\"%\"]}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Total/Person: $\",((parseInt(this.state.bill)+parseInt(this.state.bill)*parseInt(this.state.tip)/100)/parseInt(this.state.people)).toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"inputs\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{for:\"Bill\",children:\"Bill: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"Bill\",placeholder:\"Bill\",type:\"number\",value:this.state.bill,onChange:function onChange(e){_this2.setState({bill:e.target.value});}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{for:\"Tip\",children:\"Tip %: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"Tip\",placeholder:\"Tip\",type:\"number\",value:this.state.tip,onChange:function onChange(e){_this2.setState({tip:e.target.value});}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{for:\"People to Split Upon\",children:\"People to Split Upon: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"People to Split Upon\",placeholder:\"People to Split Upon\",type:\"number\",value:this.state.people,onChange:function onChange(e){_this2.setState({people:e.target.value});}})]})]})]});}}]);return TipCalculator;}(Component);export default TipCalculator;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/src/components/calculators/TipCalculator/TipCalculator.js"],"names":["Component","TipCalculator","props","state","bill","tip","people","parseInt","toFixed","e","setState","target","value"],"mappings":"41BAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAO,qBAAP,C,GACMC,CAAAA,a,8GACF,uBAAaC,KAAb,CAAmB,+CACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAW,CACPC,IAAI,CAAE,CADC,CAEPC,GAAG,CAAE,CAFE,CAGPC,MAAM,CAAE,CAHD,CAAX,CAFe,aAOlB,C,iEACQ,iBACL,mBACI,cAAM,SAAS,CAAC,MAAhB,wBACI,aAAK,SAAS,CAAC,SAAf,wBACI,gCAAY,KAAKH,KAAL,CAAWC,IAAvB,GADJ,cAEI,8BAAU,KAAKD,KAAL,CAAWE,GAArB,OAFJ,cAGI,wCAAoB,CAAC,CAACE,QAAQ,CAAC,KAAKJ,KAAL,CAAWC,IAAZ,CAAR,CAA8BG,QAAQ,CAAC,KAAKJ,KAAL,CAAWC,IAAZ,CAAR,CAA4BG,QAAQ,CAAC,KAAKJ,KAAL,CAAWE,GAAZ,CAArC,CAAyD,GAAvF,EAA6FE,QAAQ,CAAC,KAAKJ,KAAL,CAAWG,MAAZ,CAAtG,EAA2HE,OAA3H,CAAmI,CAAnI,CAApB,GAHJ,GADJ,cAMI,aAAK,SAAS,CAAC,QAAf,wBACI,oCACI,cAAO,GAAG,CAAC,MAAX,oBADJ,cAEI,cACI,EAAE,CAAC,MADP,CAEI,WAAW,CAAG,MAFlB,CAGI,IAAI,CAAG,QAHX,CAII,KAAK,CAAI,KAAKL,KAAL,CAAWC,IAJxB,CAKI,QAAQ,CAAI,kBAACK,CAAD,CAAO,CAAC,MAAI,CAACC,QAAL,CAAc,CAACN,IAAI,CAAEK,CAAC,CAACE,MAAF,CAASC,KAAhB,CAAd,EAAsC,CAL9D,EAFJ,GADJ,cAWI,oCACI,cAAO,GAAG,CAAC,KAAX,qBADJ,cAEI,cACI,EAAE,CAAC,KADP,CAEI,WAAW,CAAG,KAFlB,CAGI,IAAI,CAAG,QAHX,CAII,KAAK,CAAI,KAAKT,KAAL,CAAWE,GAJxB,CAKI,QAAQ,CAAI,kBAACI,CAAD,CAAO,CAAC,MAAI,CAACC,QAAL,CAAc,CAACL,GAAG,CAAEI,CAAC,CAACE,MAAF,CAASC,KAAf,CAAd,EAAqC,CAL7D,EAFJ,GAXJ,cAqBI,oCACI,cAAO,GAAG,CAAC,sBAAX,oCADJ,cAEI,cACI,EAAE,CAAC,sBADP,CAEI,WAAW,CAAG,sBAFlB,CAGI,IAAI,CAAG,QAHX,CAII,KAAK,CAAI,KAAKT,KAAL,CAAWG,MAJxB,CAKI,QAAQ,CAAI,kBAACG,CAAD,CAAO,CAAC,MAAI,CAACC,QAAL,CAAc,CAACJ,MAAM,CAAEG,CAAC,CAACE,MAAF,CAASC,KAAlB,CAAd,EAAwC,CALhE,EAFJ,GArBJ,GANJ,GADJ,CAyCH,C,2BAnDuBZ,S,EAqD5B,cAAeC,CAAAA,aAAf","sourcesContent":["import { Component } from 'react'\nimport './TipCalculator.css'\nclass TipCalculator extends Component{\n    constructor (props){\n        super(props)\n        this.state={\n            bill: 0,\n            tip: 0, \n            people: 1\n        }\n    }\n    render (){\n        return(\n            <form className='form'>\n                <div className='display'>\n                    <h1>Bill: ${this.state.bill}</h1>\n                    <h1>Tip: {this.state.tip}%</h1>\n                    <h1>Total/Person: ${((parseInt(this.state.bill) + ((parseInt(this.state.bill) * parseInt(this.state.tip)) / 100))/parseInt(this.state.people)).toFixed(2)}</h1>\n                </div>\n                <div className='inputs'>\n                    <div>\n                        <label for=\"Bill\">Bill: </label>\n                        <input\n                            id='Bill'\n                            placeholder = 'Bill'\n                            type = 'number'\n                            value = {this.state.bill}\n                            onChange = {(e) => {this.setState({bill: e.target.value})}}\n                        />\n                    </div>\n                    <div>\n                        <label for=\"Tip\">Tip %: </label>\n                        <input\n                            id='Tip'\n                            placeholder = 'Tip'\n                            type = 'number'\n                            value = {this.state.tip}\n                            onChange = {(e) => {this.setState({tip: e.target.value})}}\n                        />\n                    </div>\n                    <div>\n                        <label for=\"People to Split Upon\">People to Split Upon: </label>\n                        <input\n                            id='People to Split Upon'\n                            placeholder = 'People to Split Upon'\n                            type = 'number'\n                            value = {this.state.people}\n                            onChange = {(e) => {this.setState({people: e.target.value})}}\n                        />\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\nexport default TipCalculator"]},"metadata":{},"sourceType":"module"}