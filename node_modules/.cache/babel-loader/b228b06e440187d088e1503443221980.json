{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/src/components/calculators/midPFCalculator/midPFCalculator.js\";\nimport { Component } from 'react';\nimport './midPFCalculator.css';\n\nclass midPFCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valx1: null,\n      valx2: null,\n      valy1: null,\n      valy2: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Distance Formula: (x,y)=\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"x\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 39\n                }, this), \"+x\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sentence\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fillout\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"\\u221A(\", /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"x1\",\n                type: \"number\",\n                value: this.state.valx1,\n                onChange: e => {\n                  this.setState({\n                    valx1: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), \"-\", /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"x2\",\n                type: \"number\",\n                value: this.state.valx2,\n                onChange: e => {\n                  this.setState({\n                    valx2: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 35\n              }, this), \")\\xB2+(\", /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"y1\",\n                type: \"number\",\n                value: this.state.valy1,\n                onChange: e => {\n                  this.setState({\n                    valy1: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 35\n              }, this), \"-\", /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"y2\",\n                type: \"number\",\n                value: this.state.valy2,\n                onChange: e => {\n                  this.setState({\n                    valy2: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 35\n              }, this), \")\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Output: \", Math.sqrt(Math.pow(this.state.valx1 - this.state.valx2, 2) + Math.pow(this.state.valy1 - this.state.valy2, 2))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default midPFCalculator;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/src/components/calculators/midPFCalculator/midPFCalculator.js"],"names":["Component","midPFCalculator","constructor","props","state","valx1","valx2","valy1","valy2","render","e","setState","target","value","Math","sqrt","pow"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport './midPFCalculator.css'\nclass midPFCalculator extends Component{\n    constructor (props){\n        super(props)\n        this.state={\n            valx1: null,\n            valx2: null, \n            valy1: null,\n            valy2: null\n        }\n    }\n    render (){\n        return(\n            <form className='form'>\n                <div className='center'>\n                    <div className='title'>\n                        <h1>Distance Formula: (x,y)=\n                            <div>\n                                <div>x<sub>1</sub>+x<sub>2</sub></div>\n                                <div>2</div>\n                            </div>\n                        </h1>\n                    </div>\n\n                    <div className='sentence'>\n                        <div className='fillout'>\n                            <h1>&#8730;(\n                                <input\n                                    placeholder = 'x1'\n                                    type = 'number'\n                                    value = {this.state.valx1}\n                                    onChange = {(e) => {this.setState({valx1: e.target.value})}}\n                                />\n                                <sub>1</sub>-\n                                <input\n                                    placeholder = 'x2'\n                                    type = 'number'\n                                    value = {this.state.valx2}\n                                    onChange = {(e) => {this.setState({valx2: e.target.value})}}\n                                /><sub>2</sub>)&sup2;+(\n                                <input\n                                    placeholder = 'y1'\n                                    type = 'number'\n                                    value = {this.state.valy1}\n                                    onChange = {(e) => {this.setState({valy1: e.target.value})}}\n                                /><sub>1</sub>-\n                                <input\n                                    placeholder = 'y2'\n                                    type = 'number'\n                                    value = {this.state.valy2}\n                                    onChange = {(e) => {this.setState({valy2: e.target.value})}}\n                                /><sub>2</sub>)&sup2;</h1>\n                        </div>\n                        <h1>Output: {Math.sqrt((Math.pow((this.state.valx1-this.state.valx2),2)+Math.pow((this.state.valy1-this.state.valy2),2)))}</h1>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\nexport default midPFCalculator"]},"metadata":{},"sourceType":"module"}