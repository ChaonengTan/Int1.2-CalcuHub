{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/src/components/calculators/PyTCalculator/PyTCalculator.js\";\nimport { Component } from 'react';\nimport './PyTCalculator.css';\n\nclass PyTCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valA: 0,\n      valB: 0,\n      valC: 0,\n      output: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pythagorean Theorum: A^2+B^2=C^2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"ValA\",\n              children: \"ValA: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ValA\",\n              placeholder: \"ValA\",\n              type: \"number\",\n              value: this.state.valA,\n              onChange: e => {\n                this.setState({\n                  valA: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), \"^2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              this.calculateA();\n            },\n            children: \"Calculate A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"ValB\",\n              children: \"ValB: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ValB\",\n              placeholder: \"ValB\",\n              type: \"number\",\n              value: this.state.valB,\n              onChange: e => {\n                this.setState({\n                  valB: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), \"^2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              this.calculateB();\n            },\n            children: \"Calculate B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"ValC\",\n              children: \"ValC: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ValC\",\n              placeholder: \"ValC\",\n              type: \"number\",\n              value: this.state.valC,\n              onChange: e => {\n                this.setState({\n                  valC: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), \"^2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              this.calculateC();\n            },\n            children: \"Calculate C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n  calculateA() {\n    this.setState({\n      valA: Math.sqrt(this.state.valC ** 2 - this.state.valB ** 2)\n    });\n  }\n\n  calculateB() {\n    this.setState({\n      valB: Math.sqrt(this.state.valC ** 2 - this.state.valA ** 2)\n    });\n  }\n\n  calculateC() {\n    this.setState({\n      valC: Math.sqrt(this.state.valA ** 2 + this.state.valB ** 2)\n    });\n  }\n\n}\n\nexport default PyTCalculator;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/src/components/calculators/PyTCalculator/PyTCalculator.js"],"names":["Component","PyTCalculator","constructor","props","state","valA","valB","valC","output","render","e","setState","target","value","calculateA","calculateB","calculateC","Math","sqrt"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport './PyTCalculator.css'\nclass PyTCalculator extends Component{\n    constructor (props){\n        super(props)\n        this.state={\n            valA: 0,\n            valB: 0, \n            valC: 0,\n            output: 0\n        }\n    }\n    render (){\n        return(\n            <form className='form'>\n                <div className='center'>\n\n                </div>\n                <h1>Pythagorean Theorum: A^2+B^2=C^2</h1>\n                <div className='sentence'>\n                    <div className='letter'>\n                        <div className='upper'>\n                            <label for=\"ValA\">ValA: </label>\n                            <input\n                                id='ValA'\n                                placeholder = 'ValA'\n                                type = 'number'\n                                value = {this.state.valA}\n                                onChange = {(e) => {this.setState({valA: e.target.value})}}\n                            />^2\n                        </div>\n                        <button onClick={(e) => {this.calculateA()}}>Calculate A</button>\n                    </div>\n                    <div className='letter'>\n                        <div className='upper'>\n                            <label for=\"ValB\">ValB: </label>\n                            <input\n                                id='ValB'\n                                placeholder = 'ValB'\n                                type = 'number'\n                                value = {this.state.valB}\n                                onChange = {(e) => {this.setState({valB: e.target.value})}}\n                            />^2\n                        </div>\n                        <button onClick={(e) => {this.calculateB()}}>Calculate B</button>\n                    </div>\n                    <div className='letter'>\n                        <div className='upper'>\n                            <label for=\"ValC\">ValC: </label>\n                            <input\n                                id='ValC'\n                                placeholder = 'ValC'\n                                type = 'number'\n                                value = {this.state.valC}\n                                onChange = {(e) => {this.setState({valC: e.target.value})}}\n                            />^2\n                        </div>\n                        <button onClick={(e) => {this.calculateC()}}>Calculate C</button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n    calculateA() {\n        this.setState({valA: Math.sqrt((this.state.valC**2)-(this.state.valB**2))})\n    }\n    calculateB() {\n        this.setState({valB: Math.sqrt((this.state.valC**2)-(this.state.valA**2))})\n    }\n    calculateC() {\n        this.setState({valC: Math.sqrt((this.state.valA**2)+(this.state.valB**2))})\n    }\n}\nexport default PyTCalculator"]},"metadata":{},"sourceType":"module"}