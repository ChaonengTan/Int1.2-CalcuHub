{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/src/components/calculators/TipCalculator.js\";\nimport { Component } from 'react';\n\nclass TipCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bill: 0,\n      tip: 0,\n      people: 1\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bill: \", this.state.bill]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Tip: \", this.state.tip, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Total/Person: \", ((parseInt(this.state.bill) + parseInt(this.state.bill) * parseInt(this.state.tip) / 100) / parseInt(this.state.people)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"BillInput\",\n        children: \"Bill: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"BillInput\",\n        placeholder: \"Bill\",\n        type: \"number\",\n        value: this.state.bill,\n        onChange: e => {\n          this.setState({\n            bill: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Tip\",\n        type: \"number\",\n        value: this.state.tip,\n        onChange: e => {\n          this.setState({\n            tip: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"People to Split Upon\",\n        type: \"number\",\n        value: this.state.people,\n        onChange: e => {\n          this.setState({\n            people: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TipCalculator;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/2020-2021/Others/Int1.2/Int1.2-CalcuHub/calcuhub/src/components/calculators/TipCalculator.js"],"names":["Component","TipCalculator","constructor","props","state","bill","tip","people","render","parseInt","toFixed","e","setState","target","value"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AACA,MAAMC,aAAN,SAA4BD,SAA5B,CAAqC;AACjCE,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,GAAG,EAAE,CAFE;AAGPC,MAAAA,MAAM,EAAE;AAHD,KAAX;AAKH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,6BAAW,KAAKJ,KAAL,CAAWC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,4BAAU,KAAKD,KAAL,CAAWE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,qCAAmB,CAAC,CAACG,QAAQ,CAAC,KAAKL,KAAL,CAAWC,IAAZ,CAAR,GAA8BI,QAAQ,CAAC,KAAKL,KAAL,CAAWC,IAAZ,CAAR,GAA4BI,QAAQ,CAAC,KAAKL,KAAL,CAAWE,GAAZ,CAArC,GAAyD,GAAvF,IAA6FG,QAAQ,CAAC,KAAKL,KAAL,CAAWG,MAAZ,CAAtG,EAA2HG,OAA3H,CAAmI,CAAnI,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AACI,QAAA,EAAE,EAAC,WADP;AAEI,QAAA,WAAW,EAAG,MAFlB;AAGI,QAAA,IAAI,EAAG,QAHX;AAII,QAAA,KAAK,EAAI,KAAKN,KAAL,CAAWC,IAJxB;AAKI,QAAA,QAAQ,EAAKM,CAAD,IAAO;AAAC,eAAKC,QAAL,CAAc;AAACP,YAAAA,IAAI,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAhB,WAAd;AAAsC;AAL9D;AAAA;AAAA;AAAA;AAAA,cALJ,eAYI;AACI,QAAA,WAAW,EAAG,KADlB;AAEI,QAAA,IAAI,EAAG,QAFX;AAGI,QAAA,KAAK,EAAI,KAAKV,KAAL,CAAWE,GAHxB;AAII,QAAA,QAAQ,EAAKK,CAAD,IAAO;AAAC,eAAKC,QAAL,CAAc;AAACN,YAAAA,GAAG,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAf,WAAd;AAAqC;AAJ7D;AAAA;AAAA;AAAA;AAAA,cAZJ,eAmBI;AACI,QAAA,WAAW,EAAG,sBADlB;AAEI,QAAA,IAAI,EAAG,QAFX;AAGI,QAAA,KAAK,EAAI,KAAKV,KAAL,CAAWG,MAHxB;AAII,QAAA,QAAQ,EAAKI,CAAD,IAAO;AAAC,eAAKC,QAAL,CAAc;AAACL,YAAAA,MAAM,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAlB,WAAd;AAAwC;AAJhE;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AAtCgC;;AAwCrC,eAAeb,aAAf","sourcesContent":["import { Component } from 'react'\nclass TipCalculator extends Component{\n    constructor (props){\n        super(props)\n        this.state={\n            bill: 0,\n            tip: 0, \n            people: 1\n        }\n    }\n    render (){\n        return(\n            <form>\n                <h1>Bill: {this.state.bill}</h1>\n                <h1>Tip: {this.state.tip}%</h1>\n                <h1>Total/Person: {((parseInt(this.state.bill) + ((parseInt(this.state.bill) * parseInt(this.state.tip)) / 100))/parseInt(this.state.people)).toFixed(2)}</h1>\n                <label for=\"BillInput\">Bill: </label>\n                <input\n                    id='BillInput'\n                    placeholder = 'Bill'\n                    type = 'number'\n                    value = {this.state.bill}\n                    onChange = {(e) => {this.setState({bill: e.target.value})}}\n                />\n                <input\n                    placeholder = 'Tip'\n                    type = 'number'\n                    value = {this.state.tip}\n                    onChange = {(e) => {this.setState({tip: e.target.value})}}\n                />\n                \n                <input\n                    placeholder = 'People to Split Upon'\n                    type = 'number'\n                    value = {this.state.people}\n                    onChange = {(e) => {this.setState({people: e.target.value})}}\n                />\n            </form>\n        )\n    }\n}\nexport default TipCalculator"]},"metadata":{},"sourceType":"module"}